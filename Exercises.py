# My first Python code ever.
from time import sleep

bezos = int(input('Сколько денег сейчас у Безоса ? '))
money = int(input('Сколько денег у тебя есть ? '))

counter = 0
while counter < 5:
    print('.', end='')
    sleep(0.5)
    counter = counter + 1
print()
if money > bezos:
    print('Ого, да у тебя аж', money, 'денег ! ' + 'Ты богаче Безоса на', money - bezos, 'денег')
    print('Виват ! ' * 3)
elif money == bezos:
    print('Похоже, у вас поровну денег')
else:
    print('У Безоса всё равно больше')

# В первой строке входных данных содержится количество раундов игры.
# Следующие n строк содержат описание раундов - результаты бросков Мишки и Криса в i-ом раунде соответственно.
# Выводится победитель или ничья.

mish_dice = []
chris_dice = []
mish = 0
chris = 0

n = int(input())
for _ in range(n):
    i = map(int, input().split())
    mish_dice.append(next(i))
    chris_dice.append(next(i))

for i in range(n):
    if mish_dice[i] > chris_dice[i]:
        mish += 1
    elif mish_dice[i] < chris_dice[i]:
        chris += 1

if mish > chris:
    print('Mishka')
elif mish < chris:
    print('Chris')
else:
    print('Friendship is magic!^^')

# Известно, что на бал приглашены несколько пар юноша-девушка, причем уровень умений танцевать партнеров в каждой
# паре должен отличаться не более чем на единицу. Для каждого юноши и девушки известен уровень их умения танцевать.
# Входные данные: Последовательность a1,a2,...,an (1≤ai≤100), где ai — умение танцевать i-го юноши. Вторая строка
# содержит последовательность b1,b2,...,bm (1≤bj≤100), где bj — умение танцевать j-й девушки. Выходные данные:
# Выведите искомое максимальное возможное количество пар.

boys, girls = list(map(int, (input().split()))), list(map(int, (input().split())))
pairs = 0
boys.sort()
girls.sort()

while len(boys) != 0 and len(girls) != 0:
    if boys[0] - girls[0] in [-1, 0, 1]:
        pairs += 1
        boys.pop(0)
        girls.pop(0)
    elif boys[0] > girls[0]:
        girls.pop(0)
    else:
        boys.pop(0)
print(pairs)

# Лимак собирается принять участие в соревновании по спортивному программированию. Соревнование начнётся в 20:00 и
# будет продолжаться четыре часа, то есть ровно до полуночи. Участникам будет предложено n задач, упорядоченных по
# возрастанию сложности, то есть задача 1 будет самой лёгкой, а задача номер n — самой сложной. Лимак знает,
# что ему потребуется 5·i минут на решение i-й задачи. Друзья Лимака планирую устроить роскошную новогоднюю вечеринку
# и Лимак хочет прибыть в полночь или ранее. Он знает, что ему требуется ровно k минут, чтобы добраться до места
# проведения вечеринки от своего дома, где он собирается участвовать в соревновании. Сколько максимум задач может
# успеть решить Лимак, так чтобы не опоздать на новогоднюю вечеринку? Входные данные: В первой строке записаны два
# целых числа n и k (1≤n≤10, 1≤k≤240) — количество задач в соревновании и количество минут, за которое Лимак
# доберётся от дома до места проведения вечеринки. Выходные данные: Выведите одно целое число, равное максимальному
# количеству задач, которое может решить Лимак, так, чтобы прибыть на новогоднюю вечеринку ровно в полночь или раньше

tasks, road = map(int, (input().split()))
time = 240
left = time - road
cur_task = 0
task_time = 0

while cur_task < tasks:
    cur_task += 1
    task_time += cur_task * 5
    if left >= task_time:
        pass
    else:
        cur_task -= 1
        break
print(cur_task)

# У нас в наличии рюкзак, вместимость которого составляет n литров, и наша задача забить его до предела максимально
# возможно. Нам поступают вещи, объем которых измеряется также в литрах, и мы должны их складывать в наш рюкзак без
# возможности пропуска. Как только суммарный объем новой добавляемой вещи превысит вместимость рюкзака,
# ваша программа должна вывести слово "Довольно!" и затем на отдельных строчках суммарный объем вещей, которые мы
# смогли упаковать в рюкзак, и их количество. Выходные данные: Строка "Довольно!" и затем два числа – суммарный объем
# упакованных товаров и их количество. Каждое значение выводится в отдельной строке.

cap = int(input())
cur = None
inbag = 0
count = 0

while True:
    cur = int(input())
    if inbag + cur <= cap:
        inbag += cur
        count += 1
    else:
        break

print('Довольно!')
print(inbag)
print(count)

# У Васи есть n пар носков. Утром каждого дня, собираясь в школу, Вася должен надеть пару носков. Вечером,
# прийдя со школы, Вася снимает надетые носки и выбрасывает их. Каждый m-й день (в дни с номерами m,2m,3m,
# ...) мама покупает Васе одну пару носков. Она делает это поздно вечером, поэтому Вася может надеть новые носки не
# раньше следующего дня. На сколько подряд идущих дней Васе хватит носков?

sock, mom = map(int, input().split())
days = 0
while sock > 0:
    sock -= 1
    days += 1
    if days % mom == 0:
        sock += 1
print(days)

# Ване на день рождения подарили n кубиков. Он с друзьями решил построить из них пирамиду. Ваня хочет построить
# пирамиду следующим образом: на верхушке пирамиды должен находиться 1 кубик, на втором уровне — 1+2=3 кубика,
# на третьем — 1+2+3=6 кубиков, и т.д. Таким образом, на i-м уровне пирамиды должно располагаться 1+2+...+(# i-1)+i.
# Нужно узнать, пирамиду какой максимальной высоты он может создать с использованием имеющихся кубиков.

cubes = int(input())
rows = 0
cur = 0

while cubes > 0:
    rows += 1
    cur += rows
    cubes -= cur
if cubes < 0:
    print(rows - 1)
else:
    print(rows)
